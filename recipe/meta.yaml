{% set name = "qt6-main" %}
{% set version = "6.8.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://qt-mirror.dannhauer.de/archive/qt/{{ version.rpartition('.')[0] }}/{{ version }}/single/qt-everywhere-src-{{ version }}.tar.xz
    #- url: https://download.qt.io/official_releases/qt/{{ version.rpartition('.')[0] }}/{{ version }}/single/qt-everywhere-src-{{ version }}.tar.xz
    md5: ce8676e8302d82c7e80ae0f1a316c132
    patches:
      # qtbase
      - patches/0003-qtbase-use-better-clang-optimize-size.patch

      # dont look for qt.conf in bundle directory
      - patches/0015-qt6-conf-osx.patch

      # Upstream patches not yet in
      # Not yet in 6.7.2
      # https://github.com/qt/qttools/commit/687fc1601863ae7a67897bc3590b33bd3bdcc3bc
      - patches/fix_deprecation_warning_with_llvm_18.patch
      - patches/qdoc_adapt_to_breaking_llvm19.patch

  - url: https://download.qt.io/development_releases/prebuilt/llvmpipe/windows/opengl32sw-64-mesa_12_0_rc2.7z     # [win64]
    sha256: 2a0d2f92c60e0962ef5f6039d3793424c6f39e49ba27ac04a5b21ca4ae012e15                                      # [win64]
    folder: opengl32sw                                                                                            # [win64]

build:
  number: 0
  detect_binary_files_with_prefix: true
  run_exports:
    - {{ pin_subpackage('qt6-main', max_pin='x.x') }}
  # There only exists a few example python scripts
  # At best, they are compiled for the wrong version of python
  # at worst, it causes a compilation error on OSX
  # since we can't emulate arm64 on x86-64 runners
  skip_compile_pyc:
    - "*.py"
  missing_dso_whitelist:                                      # [osx]
    - /usr/lib/libbsm.0.dylib                                 # [osx]
    - /usr/lib/libcups.2.dylib                                # [osx]
    - /usr/lib/libresolv.9.dylib                              # [osx]
    - /usr/lib/libsandbox.1.dylib                             # [osx]
    - '/System/Library/Frameworks/CoreLocation.framework/**'  # [osx]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}

    # For fontconfig + freetype
    - pkg-config                         # [unix]
    - make                               # [unix]
    - cmake
    # hmaarrfk -- trying to debug the builds on OSX
    # it seems like when cmake switched from 3.28.3 to 3.29.0
    # on osx, a few files stopped being compiled according to the logs
    - cmake 3.28.*                       # [osx]
    - ninja
    - ruby >=2.5                         # [linux]
    - bison                              # [linux]
    - flex                               # [linux]
    - gperf                              # [linux]
    - m2-gperf                           # [win]
    - m2-bison                           # [win]
    - m2-flex                            # [win]
    - m2-patch                           # [win]
    - curl
    - perl 5
    # libclang is required in order to enable simultaneous x86_64 and
    # arm64 support for QDoc
    - libclang                           # [build_platform != target_platform]
    # Although these should be host-only dependencies, they are needed when
    # cross-compiling arm64 binaries on x86_64 since llvm-config (host/arm64)
    # cannot be executed on x86_64 to locate libclang successfully
    - llvmdev                           # [build_platform != target_platform]
    - clangdev >=9                      # [build_platform != target_platform]
    # circular dependency... but it helps when cross compiling
    - qt6-main   {{ version }}          # [build_platform != target_platform]

  host:
    - libdrm                             # [linux]
    - libgl-devel                        # [linux]
    - libegl-devel                       # [linux]
    - libvulkan-headers                  # [not osx]
    - libvulkan-loader                   # [not osx]
    # For pkg-config gl, fontconfig + freetype
    - pthread-stubs                      # [linux]
    - dbus                               # [linux]
    - fontconfig                         # [linux]
    - freetype                           # [linux]
    - harfbuzz
    - glib
    - libxml2                            # [linux]
    - libxkbcommon                       # [linux]
    - icu
    - libjpeg-turbo
    - libpng
    - libsqlite
    - mysql-devel                        # [not win]
    - postgresql                         # [not win]
    - pcre2
    - zlib
    - libxcb                             # [linux]
    - libdrm                             # [linux]
    - openssl
    # For QDoc
    # http://doc.qt.io/Qt-5/qdoc-guide-clang.html
    # Only libclang is needed, but needs the full package for detection.
    - llvm
    - clangdev >=9
    # Ensure that build and host have the same clang version on osx
    # otherwise qt6 may be out of sync compared to the pinned compiler
    # version
    - libclang     {{ cxx_compiler_version }}     # [osx]
    - libclang-cpp {{ cxx_compiler_version }}     # [osx]
    - libclang                                    # [not osx]
    - libclang-cpp                                # [not osx]
    - libcups                            # [linux]
    - zstd
    - alsa-lib                           # [linux]
    - krb5
    - double-conversion
    - libtiff
    - libwebp
    - wayland                            # [linux]
    # The xcb-util packages are necessary to build the Qt xcb plugin.
    # It was decided to not use CDTs for qt to resolve issues
    # that may exhibit as segfault due to missing libraries
    # in some lighter weight linux installations
    # https://github.com/conda-forge/qt-main-feedstock/issues/32
    - xcb-util                           # [linux]
    - xcb-util-wm                        # [linux]
    - xcb-util-keysyms                   # [linux]
    - xcb-util-image                     # [linux]
    - xcb-util-renderutil                # [linux]
    - xcb-util-cursor                    # [linux]
    - xorg-libx11                        # [linux]
    - xorg-libxext                       # [linux]
    - xorg-libxdamage                    # [linux]
    - xorg-libxrandr                     # [linux]
    - xorg-libxcomposite                 # [linux]
    - xorg-libxcursor                    # [linux]
    - xorg-libsm                         # [linux]
    - xorg-libice                        # [linux]
    # https://github.com/conda-forge/staged-recipes/pull/22084
    - xorg-libxxf86vm                    # [linux]
    - xorg-libxtst                       # [linux]
    - xorg-xf86vidmodeproto              # [linux]
  run:
    - libxcb                             # [linux]
    # Adding the following xcb-util run requirements resolves issue
    # that may exhibit as segfault due to missing libraries
    # in some lighter weight linux installations
    # https://github.com/conda-forge/qt-main-feedstock/issues/32
    - xcb-util                           # [linux]
    - xcb-util-wm                        # [linux]
    - xcb-util-keysyms                   # [linux]
    - xcb-util-image                     # [linux]
    - xcb-util-renderutil                # [linux]
    - xcb-util-cursor                    # [linux]
  run_constrained:
    - qt {{ version }}

test:
  requires:
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}
    - libgl-devel                        # [linux]
    - libegl-devel                       # [linux]
    - make                               # [unix]
    - cmake >=3.16
    - xcb-util                           # [linux]
    - xorg-libxdamage                    # [linux]
    # https://github.com/conda-forge/staged-recipes/pull/22084
    - xorg-libxxf86vm                    # [linux]
  files:
    - test/main-qtwebengine.cpp
    - test/main.cpp
    - test/main.qml
    - test/qml.qrc
    - test/qrc_qml.cpp
    - test/test_qmimedatabase.cpp
    - test/CMakeLists.txt
  commands:
    {% set qt_libs = ["Core",
                      "Gui",
                      "Network",
                      "OpenGL",
                      "OpenGLWidgets",
                      "PrintSupport",
                      "ShaderTools",
                      "Svg",
                      "Test",
                      "Qml",
                      "Quick",
                      "Widgets",
                      "Xml"] %}
    {% for each_qt_lib in qt_libs %}
    - test -d $PREFIX/include/qt6/Qt{{ each_qt_lib }}  # [unix]
    - test -f $PREFIX/lib/libQt6{{ each_qt_lib }}${SHLIB_EXT}  # [unix]
    - if not exist %PREFIX%\\Library\\include\\qt6\\Qt{{ each_qt_lib }} exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\Qt6{{ each_qt_lib }}.lib exit 1  # [win]
    - if not exist %PREFIX%\\Library\\bin\\Qt6{{ each_qt_lib }}.dll exit 1  # [win]
    {% endfor %}
    - test -f $PREFIX/lib/qt6/plugins/platforms/libqxcb.so  # [linux]
    - test -f $PREFIX/lib/qt6/plugins/platforms/libqeglfs.so  # [linux]
    - test -f $PREFIX/lib/qt6/plugins/sqldrivers/libqsqlite${SHLIB_EXT}  # [unix]
    - test -f $PREFIX/lib/qt6/plugins/imageformats/libqtiff${SHLIB_EXT}  # [unix]
    # We needed to add a related flag, but these two SO files should be part of the
    # qt6-wayland conda package
    - test ! -f $PREFIX/lib/libQt6WaylandClient${SHLIB_EXT}  # [unix]
    - test ! -f $PREFIX/lib/libQt6WaylandCompositor${SHLIB_EXT}  # [unix]
    - qmake6 --version

about:
  home: https://qt.io
  license: LGPL-3.0-only
  license_file: LICENSES/LGPL-3.0-only.txt
  summary: 'Qt is a cross-platform application and UI framework.'
  description: |
    Qt helps you create connected devices, UIs & applications that run
    anywhere on any device, on any operating system at any time.
  doc_url: https://doc.qt.io/
  dev_url: https://github.com/qt

extra:
  recipe-maintainers:
    - andfoy
    - ccordoba12
    - gillins
    - mingwandroid
    - msarahan
    - ocefpaf
    - stuarteberg
    - Tobias-Fischer
    - matthiasdiener
    - jschueller
